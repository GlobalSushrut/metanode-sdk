name: MetaNode SDK CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov black isort mypy
        
    - name: Run tests with pytest
      run: |
        pytest -xvs tests/
        
    - name: Lint with Black (informational only)
      run: |
        black --check --diff metanode || echo "Black formatting issues found (informational only)"
        
    - name: Check imports with isort (informational only)
      run: |
        isort --check-only --profile black --diff metanode || echo "Import sorting issues found (informational only)"
        
    - name: Type check with mypy (informational only)
      run: |
        mypy --config-file mypy.ini metanode || echo "Type check issues found (informational only)"
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build Docker image
      run: |
        docker build -t metanode/metanode-sdk:test .
        docker image ls
